import{al as j,eL as z,cW as G,cZ as L,aq as q,cX as A,ao as B,ap as C,eO as D,c$ as E}from"./vendor-97e3022f.js";import{r as X}from"./vec3f32-ad1dc57f.js";import{b as Z,a as k}from"./WGLContainer-a2b9a91c.js";import{E as F}from"./Container-32f42feb.js";class T extends Z{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=j()}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const s of this.children)s.beforeRender(e)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"overlay",brushes:[k.overlay],target:()=>this.children,drawPhase:F.MAP});return[...super.prepareRenderPasses(e),s]}_updateMatrices(e){const{state:s}=e,{id:a,size:d,pixelRatio:r,resolution:c,rotation:l,viewpoint:u,displayMat3:_}=s;if(this._viewStateId===a)return;const p=Math.PI/180*l,i=r*d[0],n=r*d[1];this._localOrigin=u.targetGeometry.clone();const{x:h,y:v}=this._localOrigin,M=z(h,s.spatialReference);this._localOrigin.x=M,this._localOrigin.y=v;const m=c*i,g=c*n,t=G(this._dvsMat3);L(t,t,_),q(t,t,A(i/2,n/2)),B(t,t,X(i/m,-n/g,1)),C(t,t,-p),this._viewStateId=a}_updateOverlays(e,s){const{state:a}=e,{rotation:d,spatialReference:r,worldScreenWidth:c,size:l,viewpoint:u}=a,_=this._localOrigin;let p,i=0;const n=D(r);if(n&&r.isWrappable){const h=l[0],v=l[1],M=180/Math.PI*d,m=Math.abs(Math.cos(M)),g=Math.abs(Math.sin(M)),t=Math.round(h*m+v*g),[b,x]=n.valid,o=E(r),{x:O,y:I}=u.targetGeometry,S=[O,I],w=[0,0];a.toScreen(w,S);const f=[0,0];let y;y=t>c?.5*c:.5*t;const P=Math.floor((O+.5*o)/o),$=b+P*o,W=x+P*o,R=[w[0]+y,0];a.toMap(f,R),f[0]>W&&(i=o),R[0]=w[0]-y,a.toMap(f,R),f[0]<$&&(i=-o),p={worldWidth:o,xBounds:[b,x]}}for(const h of s)h.updateDrawCoords(_,i,r,p)}}export{T as f};
