import{I as K,bf as D,bg as U,bh as W,bi as g,n as T,bj as X,bk as Y,bl as ee,r as x,v as d,bm as I,bn as b,bo as te,bp as L,bq as A,aD as O,b as se,br as Q,bs as ne,bt as q,bu as ie,bv as Z}from"./vendor-52594844.js";const $=K.getLogger("esri.layers.support.ElevationSampler");class B{queryElevation(e){return oe(e.clone(),this)}on(){return ue}projectIfRequired(e,t){return H(e,t)}}class ae extends B{get spatialReference(){return this.extent.spatialReference}constructor(e,t,s){super(),this.tile=e,this.noDataValue=s;const n=e.tile.extent;this.extent=U(n,t.spatialReference),this.extent.zmin=e.zmin,this.extent.zmax=e.zmax,this._aaExtent=n;const a=g(t.spatialReference),i=t.lodAt(e.tile.level).resolution*a;this.demResolution={min:i,max:i}}contains(e){const t=this.projectIfRequired(e,this.spatialReference);return!T(t)&&this.containsAt(t.x,t.y)}containsAt(e,t){return X(this._aaExtent,e,t)}elevationAt(e,t){if(!this.containsAt(e,t)){const s=this.extent,n=`${s.xmin}, ${s.ymin}, ${s.xmax}, ${s.ymax}`;return $.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler extent (${n})`),this.noDataValue}return Y(this.tile.sample(e,t),this.noDataValue)}}class j extends B{get spatialReference(){return this.extent.spatialReference}constructor(e,t,s){let n;super(),typeof t=="number"?(this.noDataValue=t,n=null):(n=t,this.noDataValue=s),this.samplers=n?e.map(i=>new ae(i,n,this.noDataValue)):e;const a=this.samplers[0];if(a){this.extent=a.extent.clone();const{min:i,max:l}=a.demResolution;this.demResolution={min:i,max:l};for(let o=1;o<this.samplers.length;o++){const r=this.samplers[o];this.extent.union(r.extent),this.demResolution.min=Math.min(this.demResolution.min,r.demResolution.min),this.demResolution.max=Math.max(this.demResolution.max,r.demResolution.max)}}else this.extent=U(W(),n.spatialReference),this.demResolution={min:0,max:0}}elevationAt(e,t){for(const s of this.samplers)if(s.containsAt(e,t))return s.elevationAt(e,t);return $.warn("#elevationAt()",`Point used to sample elevation (${e}, ${t}) is outside of the sampler`),this.noDataValue}}function oe(c,e){const t=H(c,e.spatialReference);if(!t)return null;switch(c.type){case"point":le(c,t,e);break;case"polyline":re(c,t,e);break;case"multipoint":ce(c,t,e)}return c}function H(c,e){if(T(c))return null;const t=c.spatialReference;if(t.equals(e))return c;const s=ee(c,e);return s||$.error(`Cannot project geometry spatial reference (wkid:${t.wkid}) to elevation sampler spatial reference (wkid:${e.wkid})`),s}function le(c,e,t){c.z=t.elevationAt(e.x,e.y)}function re(c,e,t){y.spatialReference=e.spatialReference;const s=c.hasM&&!c.hasZ;for(let n=0;n<c.paths.length;n++){const a=c.paths[n],i=e.paths[n];for(let l=0;l<a.length;l++){const o=a[l],r=i[l];y.x=r[0],y.y=r[1],s&&(o[3]=o[2]),o[2]=t.elevationAt(y.x,y.y)}}c.hasZ=!0}function ce(c,e,t){y.spatialReference=e.spatialReference;const s=c.hasM&&!c.hasZ;for(let n=0;n<c.points.length;n++){const a=c.points[n],i=e.points[n];y.x=i[0],y.y=i[1],s&&(a[3]=a[2]),a[2]=t.elevationAt(y.x,y.y)}c.hasZ=!0}const y=new D,ue={remove(){}};class he{constructor(e,t){this.data=e,this.safeWidth=.99999999*(e.width-1),this.dx=(e.width-1)/(t[2]-t[0]),this.dy=(e.width-1)/(t[3]-t[1]),this.x0=t[0],this.y1=t[3]}}class G{constructor(e,t=null){if(this.tile=e,x(t)&&x(e)){const s=e.extent;this._samplerData=new he(t,s)}}get zmin(){return x(this._samplerData)?this._samplerData.data.minValue:0}get zmax(){return x(this._samplerData)?this._samplerData.data.maxValue:0}sample(e,t){if(T(this._samplerData))return;const{safeWidth:s,data:n,dx:a,dy:i,y1:l,x0:o}=this._samplerData,{width:r,values:u,noDataValue:m}=n,p=P(i*(l-t),0,s),h=P(a*(e-o),0,s),M=Math.floor(p),C=Math.floor(h),_=M*r+C,F=_+r,R=u[_],E=u[F],z=u[_+1],S=u[F+1];if(R!==m&&E!==m&&z!==m&&S!==m){const V=h-C,k=R+(z-R)*V;return k+(E+(S-E)*V-k)*(p-M)}}}function P(c,e,t){return c<e?e:c>t?t:c}class de{async queryAll(e,t,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter(r=>r.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=v.fromGeometry(t);let a=!1;s&&s.returnSampleInfo||(a=!0);const i={...w,...s,returnSampleInfo:!0},l=await this.query(e[e.length-1],n,i),o=await this._queryAllContinue(e,l,i);return o.geometry=o.geometry.export(),a&&delete o.sampleInfo,o}async query(e,t,s){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof v)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...w,...s},a=new pe(e,t.spatialReference,n),i=n.signal;return await e.load({signal:i}),await this._createGeometryDescriptor(a,t,i),await this._selectTiles(a,i),await this._populateElevationTiles(a,i),this._sampleGeometryWithElevation(a),this._createQueryResult(a,i)}async createSampler(e,t,s){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...w,...s};return this._createSampler(e,t,n)}async createSamplerAll(e,t,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter(i=>i.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...w,...s,returnSampleInfo:!0},a=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,a,n)}async _createSampler(e,t,s,n){const a=s.signal;await e.load({signal:a});const i=t.spatialReference,l=e.tileInfo.spatialReference;i.equals(l)||(await I([{source:i,dest:l}],{signal:a}),t=b(t,l));const o=new me(e,t,s,n);return await this._selectTiles(o,a),await this._populateElevationTiles(o,a),new j(o.elevationTiles,o.layer.tileInfo,o.options.noDataValue)}async _createSamplerAllContinue(e,t,s,n){if(e.pop(),!e.length)return s;const a=s.samplers.map(r=>te(r.extent)),i=await this._createSampler(e[e.length-1],t,n,a);if(i.samplers.length===0)return s;const l=s.samplers.concat(i.samplers),o=new j(l,n.noDataValue);return this._createSamplerAllContinue(e,t,o,n)}async _queryAllContinue(e,t,s){const n=e.pop(),a=t.geometry.coordinates,i=t.sampleInfo;L(i);const l=[],o=[];for(let p=0;p<a.length;p++){const h=i[p];h.demResolution>=0?h.source||(h.source=n):e.length&&(l.push(a[p]),o.push(p))}if(!e.length||l.length===0)return t;const r=t.geometry.clone(l),u=await this.query(e[e.length-1],r,s),m=u.sampleInfo;if(!m)throw new Error("no sampleInfo");return o.forEach((p,h)=>{a[p].z=u.geometry.coordinates[h].z,i[p].demResolution=m[h].demResolution}),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);L(s);const n={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(a=>{a.tile=null,a.elevationTile=null}),n}async _createGeometryDescriptor(e,t,s){let n;const a=e.layer.tileInfo.spatialReference;if(t instanceof v?n=await t.project(a,s):(await I([{source:t.spatialReference,dest:a}],{signal:s}),n=b(t,a)),!n)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${a.wkid}'`);e.geometry=v.fromGeometry(n)}async _selectTiles(e,t){const s=e.options.demResolution;if(e.type==="geometry"&&this._preselectOutsideLayerExtent(e),typeof s=="number")this._selectTilesClosestResolution(e);else if(s==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(s!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${s}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){if(T(e.layer.fullExtent))return;const t=new G(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const s=e.layer.fullExtent;e.geometry.coordinates.forEach(n=>{const a=n.x,i=n.y;(a<s.xmin||a>s.xmax||i<s.ymin||i>s.ymax)&&(n.elevationTile=t)})}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,s=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(s)}_findNearestDemResolutionLODIndex(e,t){const s=t/g(e.spatialReference);let n=e.lods[0],a=0;for(let i=1;i<e.lods.length;i++){const l=e.lods[i];Math.abs(l.resolution-s)<Math.abs(n.resolution-s)&&(n=l,a=i)}return a}async _selectTilesFinestContiguous(e,t){const s=N(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,s,t)}async _selectTilesFinestContiguousAt(e,t,s){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const a=n.tilemapCache,i=e.getTilesToFetch();try{if(a)await A(Promise.all(i.map(l=>a.fetchAvailability(l.level,l.row,l.col,{signal:s}))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(l){O(l),await this._selectTilesFinestContiguousAt(e,t-1,s)}}async _populateElevationTiles(e,t){const s=e.getTilesToFetch(),n={},a=e.options.cache,i=e.options.noDataValue,l=s.map(async o=>{if(o.id==null)return;const r=`${e.layer.uid}:${o.id}:${i}`,u=x(a)?a.get(r):null,m=x(u)?u:await e.layer.fetchTile(o.level,o.row,o.col,{noDataValue:i,signal:t});x(a)&&a.put(r,m),n[o.id]=new G(o,m)});await A(se(l),t),e.populateElevationTiles(n)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const s=e.layer.tilemapCache;if(!s)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),a={},i=n.map(async l=>{const o=new Q(null,0,0,0,W()),r=await ne(s.fetchAvailabilityUpsample(l.level,l.row,l.col,o,{signal:t}));r.ok!==!1?l.id!=null&&(a[l.id]=o):O(r.error)});await A(Promise.all(i),t),e.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let s=0;const n={},a=o=>{o.id!=null&&(o.id in n?n[o.id]++:(n[o.id]=1,s++))},i=o=>{if(o.id==null)return;const r=n[o.id];r===1?(delete n[o.id],s--):n[o.id]=r-1};e.forEachTileToFetch(a,i);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch(o=>{s<=e.options.maximumAutoTileRequests||(i(o),t.upsampleTile(o)&&(l=!0),a(o))},i),l););}_selectTilesAutoFinest(e){const t=N(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const s=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch((a,i)=>{s.upsampleTile(a)?n=!0:i()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const s=t.elevationTile;let n=e.options.noDataValue;if(s){const a=s.sample(t.x,t.y);x(a)?n=a:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,s=g(t.spatialReference);return e.geometry.coordinates.map(n=>{let a=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(a=t.lodAt(n.elevationTile.tile.level).resolution*s),{demResolution:a}})}}class v{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new v;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(s=>s.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await I([{source:this.spatialReference,dest:e}],{signal:t});const s=new q({spatialReference:this.spatialReference,points:this.coordinates.map(l=>[l.x,l.y])}),n=b(s,e);if(!n)return null;const a=this.coordinates.map((l,o)=>{const r=l.clone(),u=n.points[o];return r.x=u[0],r.y=u[1],r}),i=this.clone(a);return i.spatialReference=e,i}static fromGeometry(e){const t=new v;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof v)t.coordinates=e.coordinates.map(s=>s.clone()),t._exporter=(s,n)=>{const a=e.clone(s);return a.spatialReference=n,a};else switch(e.type){case"point":{const s=e,{hasZ:n,hasM:a}=s;t.coordinates=n&&a?[new f(s.x,s.y,s.z,s.m)]:n?[new f(s.x,s.y,s.z)]:a?[new f(s.x,s.y,null,s.m)]:[new f(s.x,s.y)],t._exporter=(i,l)=>e.hasM?new D(i[0].x,i[0].y,i[0].z,i[0].m,l):new D(i[0].x,i[0].y,i[0].z,l);break}case"multipoint":{const s=e,{hasZ:n,hasM:a}=s;t.coordinates=n&&a?s.points.map(i=>new f(i[0],i[1],i[2],i[3])):n?s.points.map(i=>new f(i[0],i[1],i[2])):a?s.points.map(i=>new f(i[0],i[1],null,i[2])):s.points.map(i=>new f(i[0],i[1])),t._exporter=(i,l)=>e.hasM?new q({points:i.map(o=>[o.x,o.y,o.z,o.m]),hasZ:!0,hasM:!0,spatiaReference:l}):new q(i.map(o=>[o.x,o.y,o.z]),l);break}case"polyline":{const s=e,n=[],a=[],{hasZ:i,hasM:l}=e;let o=0;for(const r of s.paths)if(a.push([o,o+r.length]),o+=r.length,i&&l)for(const u of r)n.push(new f(u[0],u[1],u[2],u[3]));else if(i)for(const u of r)n.push(new f(u[0],u[1],u[2]));else if(l)for(const u of r)n.push(new f(u[0],u[1],null,u[2]));else for(const u of r)n.push(new f(u[0],u[1]));t.coordinates=n,t._exporter=(r,u)=>{const m=e.hasM?r.map(h=>[h.x,h.y,h.z,h.m]):r.map(h=>[h.x,h.y,h.z]),p=a.map(h=>m.slice(h[0],h[1]));return new ie({paths:p,hasM:e.hasM,hasZ:!0,spatialReference:u})};break}}return t}}class f{constructor(e,t,s=null,n=null,a=null,i=null){this.x=e,this.y=t,this.z=s,this.m=n,this.tile=a,this.elevationTile=i}clone(){return new f(this.x,this.y,this.z,this.m)}}class J{constructor(e,t){this.layer=e,this.options=t}}class pe extends J{constructor(e,t,s){super(e,s),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>{t.tile=null});else{const t=this.layer.tileInfo,s=t.lods[e].level;this.geometry.coordinates.forEach(n=>{n.tile=t.tileAt(s,n.x,n.y)})}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const s of this.geometry.coordinates)!s.elevationTile&&((t=s.tile)!=null&&t.id)&&(s.elevationTile=e[s.tile.id])}remapTiles(e){var t;for(const s of this.geometry.coordinates){const n=(t=s.tile)==null?void 0:t.id;s.tile=n?e[n]:null}}getTilesToFetch(){var s;const e={},t=[];for(const n of this.geometry.coordinates){const a=n.tile;if(!a)continue;const i=(s=n.tile)==null?void 0:s.id;n.elevationTile||!i||e[i]||(e[i]=a,t.push(a))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class me extends J{constructor(e,t,s,n){super(e,s),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const s=this._maximumLodForRequests(t),n=Math.min(s,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const s=this.extent;if(T(s))return-1;for(let n=t.lods.length-1;n>=0;n--){const a=t.lods[n],i=a.resolution*t.size[0],l=a.resolution*t.size[1];if(Math.ceil(s.width/i)*Math.ceil(s.height/l)<=e)return n}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const s=t.id&&e[t.id];s&&(this._fetchedCandidates.add(t),this.elevationTiles.push(s))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const s=this._candidateTiles;this._candidateTiles=[],s.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let a=!1;e(n,()=>a=!0),a?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const s={},n=[];for(const i of e){const l=i.id;l&&!s[l]?(s[l]=i,n.push(i)):t&&t(i)}const a=n.sort((i,l)=>i.level-l.level);return a.filter((i,l)=>{for(let o=0;o<l;o++){const r=a[o].extent;if(r&&i.extent&&Z(r,i.extent))return t&&t(i),!1}return!0})}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(T(t))return;const s=this.layer.tileInfo,n=s.lods[e],a=s.tileAt(n.level,t.xmin,t.ymin),i=a.extent;if(T(i))return;const l=n.resolution*s.size[0],o=n.resolution*s.size[1],r=Math.ceil((t.xmax-i[0])/l),u=Math.ceil((t.ymax-i[1])/o);for(let m=0;m<u;m++)for(let p=0;p<r;p++){const h=new Q(null,a.level,a.row-m,a.col+p);s.updateTileInfo(h),this._tileIsMasked(h)||this._candidateTiles.push(h)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&Z(t,e.extent))}}function N(c,e=0){let t=c.lods.length-1;if(e>0){const s=e/g(c.spatialReference),n=c.lods.findIndex(a=>a.resolution<s);n===0?t=0:n>0&&(t=n-1)}return t}const w={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};export{de as ElevationQuery,v as GeometryDescriptor,N as getFinestLodIndex};
