import{aK as r,aL as a,aN as m,cH as g,ag as l,U as d,aF as u}from"./vendor-97e3022f.js";import{a as c}from"./BitmapContainer-49e4f414.js";import{f as y,y as f}from"./LayerView-811b7984.js";import{V as x}from"./GraphicsView2D-b3ca787b.js";import{h as _}from"./HighlightGraphicContainer-f39aa55d.js";import{_ as w}from"./ExportStrategy-2368e5d5.js";import{y as H}from"./ExportImageParameters-a9c0aae8.js";import{i as v}from"./timeSupport-6a15f502.js";import{i as I}from"./RefreshableLayerView-9ed839ae.js";import{_ as $,r as V}from"./drapedUtils-020bd1c7.js";import"./WGLContainer-a2b9a91c.js";import"./definitions-73d759bb.js";import"./LabelMetric-8eef19e5.js";import"./enums-583c1c7d.js";import"./Texture-6f40bbbc.js";import"./enums-2e633670.js";import"./Program-cd0404af.js";import"./VertexElementDescriptor-2925c6af.js";import"./ProgramTemplate-5c66dd31.js";import"./vec3f32-ad1dc57f.js";import"./Container-32f42feb.js";import"./highlightReasons-ca04dea3.js";import"./StyleDefinition-79f309f8.js";import"./config-1337d16e.js";import"./earcut-de5fa6d9.js";import"./featureConversionUtils-eadb343e.js";import"./OptimizedFeature-059c854c.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./layerViewUtils-ca52829e.js";import"./UpdateTracking2D-5be40e03.js";import"./BidiEngine-26aff129.js";import"./GeometryUtils-0db672dc.js";import"./Rect-ea14f53a.js";import"./BindType-d21d71dd.js";import"./Util-68603ac4.js";import"./AttributeStore-ad7a9d4e.js";import"./TimeOnly-e23204e1.js";import"./timeSupport-15cf4e87.js";import"./json-48e3ea08.js";import"./FeatureCommandQueue-5d56cbea.js";import"./constants-991354c8.js";import"./normalizeUtilsSync-d6baf3ac.js";import"./AGraphicContainer-3a0ec851.js";import"./TechniqueInstance-9f897cc2.js";import"./TileContainer-223117d8.js";import"./Bitmap-96a616ab.js";import"./scaleUtils-7c3a149f.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-dde1bb8c.js";import"./popupUtils-26c9128e.js";const E=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return v(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return r([a()],i.prototype,"exportImageParameters",void 0),r([a({readOnly:!0})],i.prototype,"floors",null),r([a({readOnly:!0})],i.prototype,"exportImageVersion",null),r([a()],i.prototype,"layer",void 0),r([a()],i.prototype,"suspended",void 0),r([a({readOnly:!0})],i.prototype,"timeExtent",null),i=r([m("esri.views.layers.MapImageLayerView")],i),i};let s=class extends E(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{l(e)||d.getLogger(this).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,o=e>=10.3,n=e>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new w({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:o,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,o){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...o})}fetchImageBitmap(t,i,e,o){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...o})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([a()],s.prototype,"strategy",void 0),r([a()],s.prototype,"updating",void 0),s=r([m("esri.views.2d.layers.MapImageLayerView2D")],s);const It=s;export{It as default};
