import{cO as d,d4 as h,bW as y,cT as S,bt as N,c9 as l,U as D}from"./vendor-97e3022f.js";import{$ as g}from"./Mesh-c7226058.js";import{N as M,o as w,i as T}from"./MeshTransform-59c4d71c.js";import{s as F}from"./infoFor3D-24efd44a.js";import"./MeshVertexAttributes-e952fd4c.js";import"./MeshLocalVertexSpace-42092399.js";import"./meshVertexSpaceUtils-8cc745bc.js";import"./earcut-de5fa6d9.js";import"./DoubleArray-0a89b142.js";import"./Indices-07f78454.js";import"./plane-5137aec6.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./quatf64-81e039e4.js";import"./deduplicate-6a863634.js";import"./projection-1eaee7cb.js";import"./spatialReferenceEllipsoidUtils-e15aaa16.js";import"./computeTranslationToOriginAndRotation-5383511e.js";import"./BufferView-f35119c1.js";import"./vec3-48d5311f.js";import"./vec4-006d03d4.js";import"./vertexSpaceConversion-071044e1.js";import"./quat-868b706a.js";const I=()=>D.getLogger("esri.rest.support.meshFeatureSet");function nt(t,e,r){const n=r.features;r.features=[],delete r.geometryType;const o=d.fromJSON(r);if(o.geometryType="mesh",!r.assetMaps)return o;const s=x(e,r.assetMaps),i=t.sourceSpatialReference??h.WGS84,p=r.globalIdFieldName,{outFields:a}=t,m=a!=null&&a.length>0?O(a.includes("*")?null:new Set(a)):()=>({});for(const u of n){const c=b(u,p,i,e,s);o.features.push(new y({geometry:c,attributes:m(u)}))}return o}function O(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function b(t,e,r,n,o){const s=t.attributes[e],i=o.get(s);if(i==null||!t.geometry)return null;const p=L(t,r,n),a=S.fromJSON(t.geometry);a.spatialReference=r;const m=$(t.attributes,n),u=r.isGeographic?"local":"georeferenced",c=A(i);return c?g.createWithExternalSource(p,c,{extent:a,transform:m,vertexSpace:u}):g.createIncomplete(p,{extent:a,transform:m,vertexSpace:u})}function L({attributes:t},e,{transformFieldRoles:r}){const n=t[r.originX],o=t[r.originY],s=t[r.originZ];return new N({x:n,y:o,z:s,spatialReference:e})}function $(t,{transformFieldRoles:e}){return new M({translation:[t[e.translationX],-t[e.translationZ],t[e.translationY]],rotationAxis:[t[e.rotationX],-t[e.rotationZ],t[e.rotationY]],rotationAngle:t[e.rotationDeg],scale:[t[e.scaleX],t[e.scaleZ],t[e.scaleY]]})}var f;function x(t,e){const r=new Map;for(const n of e){const o=n.parentGlobalId;if(o==null)continue;const s=n.assetName,i=n.assetType,p=n.assetHash,a=n.assetURL,m=n.conversionStatus,u=n.seqNo,c=F(i,t.supportedFormats);if(!c){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const E=l(r,o,()=>({files:new Map}));l(E.files,s,()=>({name:s,type:i,mimeType:c,status:P(m),parts:[]})).parts[u]={hash:p,url:a}}return r}function A(t){const e=Array.from(t.files.values()),r=new Array;for(const n of e){if(n.status!==f.COMPLETED)return null;const o=new Array;for(const s of n.parts){if(!s)return null;o.push(new w(s.url,s.hash))}r.push(new T(n.name,n.mimeType,o))}return r}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return f.COMPLETED;case"INPROGRESS":return f.PENDING;default:return f.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(f||(f={}));export{x as assetMapFromAssetMapsJSON,b as extractMesh,nt as meshFeatureSetFromJSON};
