import{aD as o,bW as g,bs as m,O as n,b9 as a,aK as p,aL as l,aN as c}from"./vendor-97e3022f.js";import{t as d}from"./highlightReasons-ca04dea3.js";import{f as u,y as w}from"./LayerView-811b7984.js";import{t as y}from"./GraphicContainer-1faf99c6.js";import{V}from"./GraphicsView2D-b3ca787b.js";import{e as f}from"./HighlightCounter-6b0cdd1e.js";import"./Container-32f42feb.js";import"./definitions-73d759bb.js";import"./enums-2e633670.js";import"./Texture-6f40bbbc.js";import"./layerViewUtils-ca52829e.js";import"./AGraphicContainer-3a0ec851.js";import"./TechniqueInstance-9f897cc2.js";import"./UpdateTracking2D-5be40e03.js";import"./BidiEngine-26aff129.js";import"./OptimizedFeature-059c854c.js";import"./GeometryUtils-0db672dc.js";import"./enums-583c1c7d.js";import"./Rect-ea14f53a.js";import"./LabelMetric-8eef19e5.js";import"./Program-cd0404af.js";import"./VertexElementDescriptor-2925c6af.js";import"./BindType-d21d71dd.js";import"./Util-68603ac4.js";import"./TileContainer-223117d8.js";import"./WGLContainer-a2b9a91c.js";import"./ProgramTemplate-5c66dd31.js";import"./vec3f32-ad1dc57f.js";import"./StyleDefinition-79f309f8.js";import"./config-1337d16e.js";import"./earcut-de5fa6d9.js";import"./featureConversionUtils-eadb343e.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./FeatureCommandQueue-5d56cbea.js";import"./constants-991354c8.js";import"./AttributeStore-ad7a9d4e.js";import"./TimeOnly-e23204e1.js";import"./timeSupport-15cf4e87.js";import"./json-48e3ea08.js";import"./normalizeUtilsSync-d6baf3ac.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(n);return e!=null&&e.length?(this._addHighlight(e,t),a(()=>this._removeHighlight(e,t))):a()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightReason(r),h=d(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};p([l()],s.prototype,"graphicsView",void 0),s=p([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const ai=s;export{ai as default};
