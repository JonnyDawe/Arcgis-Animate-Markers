import{w as s,y as i,x as l,bV as h,dY as n,cM as f,fw as S,a1 as g,bY as y,U as w,fx as R}from"./vendor-CBH3cTFe.js";let o=class extends h{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:f(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],o.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],o.prototype,"outSpatialReference",void 0),s([i()],o.prototype,"transformation",void 0),s([i()],o.prototype,"transformForward",void 0),o=s([l("esri.rest.support.ProjectParameters")],o);const j=o,F=S(j);async function N(e,t,r){t=F(t);const a=g(e),p={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,c=f(t.geometries[0]),u=y(p,r);return w(a.path+"/project",u).then(({data:{geometries:d}})=>R(d,c,m))}export{N as n,j as p};
